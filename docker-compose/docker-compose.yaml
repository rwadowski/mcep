version: '3.8'
services:
  psql:
    container_name: database
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=mcep
      - POSTGRES_PASSWORD=mcep
    ports:
      - '5432:5432'
  kafka:
    image: &kafka-image docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list"]
      start_period: 15s
      interval: 10s

  init-kafka:
    image: *kafka-image
    container_name: kafka-init
    working_dir: /opt/bitnami/kafka/bin
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - /bin/bash
      - -c
      - |
        kafka-topics.sh --create --if-not-exists --topic input --replication-factor=1 --partitions=1 --bootstrap-server kafka:9092
        kafka-topics.sh --create --if-not-exists --topic output --replication-factor=1 --partitions=1 --bootstrap-server kafka:9092